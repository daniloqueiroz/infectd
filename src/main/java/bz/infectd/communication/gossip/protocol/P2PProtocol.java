// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gossip.proto

package bz.infectd.communication.gossip.protocol;

public final class P2PProtocol {
  private P2PProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface HeartbeatOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string node_host = 1;
    boolean hasNodeHost();
    String getNodeHost();
    
    // required int32 node_port = 2;
    boolean hasNodePort();
    int getNodePort();
    
    // required int32 heartbeat = 3;
    boolean hasHeartbeat();
    int getHeartbeat();
  }
  public static final class Heartbeat extends
      com.google.protobuf.GeneratedMessage
      implements HeartbeatOrBuilder {
    // Use Heartbeat.newBuilder() to construct.
    private Heartbeat(Builder builder) {
      super(builder);
    }
    private Heartbeat(boolean noInit) {}
    
    private static final Heartbeat defaultInstance;
    public static Heartbeat getDefaultInstance() {
      return defaultInstance;
    }
    
    public Heartbeat getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bz.infectd.communication.gossip.protocol.P2PProtocol.internal_static_gossip_Heartbeat_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bz.infectd.communication.gossip.protocol.P2PProtocol.internal_static_gossip_Heartbeat_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string node_host = 1;
    public static final int NODE_HOST_FIELD_NUMBER = 1;
    private java.lang.Object nodeHost_;
    public boolean hasNodeHost() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getNodeHost() {
      java.lang.Object ref = nodeHost_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          nodeHost_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNodeHostBytes() {
      java.lang.Object ref = nodeHost_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        nodeHost_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required int32 node_port = 2;
    public static final int NODE_PORT_FIELD_NUMBER = 2;
    private int nodePort_;
    public boolean hasNodePort() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getNodePort() {
      return nodePort_;
    }
    
    // required int32 heartbeat = 3;
    public static final int HEARTBEAT_FIELD_NUMBER = 3;
    private int heartbeat_;
    public boolean hasHeartbeat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getHeartbeat() {
      return heartbeat_;
    }
    
    private void initFields() {
      nodeHost_ = "";
      nodePort_ = 0;
      heartbeat_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasNodeHost()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNodePort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeartbeat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNodeHostBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, nodePort_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, heartbeat_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNodeHostBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, nodePort_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, heartbeat_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements bz.infectd.communication.gossip.protocol.P2PProtocol.HeartbeatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return bz.infectd.communication.gossip.protocol.P2PProtocol.internal_static_gossip_Heartbeat_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return bz.infectd.communication.gossip.protocol.P2PProtocol.internal_static_gossip_Heartbeat_fieldAccessorTable;
      }
      
      // Construct using bz.infectd.communication.protocol.gossip.P2PProtocol.Heartbeat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        nodeHost_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        nodePort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        heartbeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat.getDescriptor();
      }
      
      public bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat getDefaultInstanceForType() {
        return bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat.getDefaultInstance();
      }
      
      public bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat build() {
        bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat buildPartial() {
        bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat result = new bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.nodeHost_ = nodeHost_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nodePort_ = nodePort_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.heartbeat_ = heartbeat_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat) {
          return mergeFrom((bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat other) {
        if (other == bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat.getDefaultInstance()) return this;
        if (other.hasNodeHost()) {
          setNodeHost(other.getNodeHost());
        }
        if (other.hasNodePort()) {
          setNodePort(other.getNodePort());
        }
        if (other.hasHeartbeat()) {
          setHeartbeat(other.getHeartbeat());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasNodeHost()) {
          
          return false;
        }
        if (!hasNodePort()) {
          
          return false;
        }
        if (!hasHeartbeat()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              nodeHost_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nodePort_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              heartbeat_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string node_host = 1;
      private java.lang.Object nodeHost_ = "";
      public boolean hasNodeHost() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getNodeHost() {
        java.lang.Object ref = nodeHost_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          nodeHost_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNodeHost(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        nodeHost_ = value;
        onChanged();
        return this;
      }
      public Builder clearNodeHost() {
        bitField0_ = (bitField0_ & ~0x00000001);
        nodeHost_ = getDefaultInstance().getNodeHost();
        onChanged();
        return this;
      }
      void setNodeHost(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        nodeHost_ = value;
        onChanged();
      }
      
      // required int32 node_port = 2;
      private int nodePort_ ;
      public boolean hasNodePort() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getNodePort() {
        return nodePort_;
      }
      public Builder setNodePort(int value) {
        bitField0_ |= 0x00000002;
        nodePort_ = value;
        onChanged();
        return this;
      }
      public Builder clearNodePort() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nodePort_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 heartbeat = 3;
      private int heartbeat_ ;
      public boolean hasHeartbeat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getHeartbeat() {
        return heartbeat_;
      }
      public Builder setHeartbeat(int value) {
        bitField0_ |= 0x00000004;
        heartbeat_ = value;
        onChanged();
        return this;
      }
      public Builder clearHeartbeat() {
        bitField0_ = (bitField0_ & ~0x00000004);
        heartbeat_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:gossip.Heartbeat)
    }
    
    static {
      defaultInstance = new Heartbeat(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:gossip.Heartbeat)
  }
  
  public interface GossipOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .gossip.Gossip.Type type = 1;
    boolean hasType();
    bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip.Type getType();
    
    // optional string mac = 2;
    boolean hasMac();
    String getMac();
    
    // optional .gossip.Heartbeat heartbeat = 3;
    boolean hasHeartbeat();
    bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat getHeartbeat();
    bz.infectd.communication.gossip.protocol.P2PProtocol.HeartbeatOrBuilder getHeartbeatOrBuilder();
  }
  public static final class Gossip extends
      com.google.protobuf.GeneratedMessage
      implements GossipOrBuilder {
    // Use Gossip.newBuilder() to construct.
    private Gossip(Builder builder) {
      super(builder);
    }
    private Gossip(boolean noInit) {}
    
    private static final Gossip defaultInstance;
    public static Gossip getDefaultInstance() {
      return defaultInstance;
    }
    
    public Gossip getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bz.infectd.communication.gossip.protocol.P2PProtocol.internal_static_gossip_Gossip_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bz.infectd.communication.gossip.protocol.P2PProtocol.internal_static_gossip_Gossip_fieldAccessorTable;
    }
    
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      HEARTBEAT(0, 1),
      ;
      
      public static final int HEARTBEAT_VALUE = 1;
      
      
      public final int getNumber() { return value; }
      
      public static Type valueOf(int value) {
        switch (value) {
          case 1: return HEARTBEAT;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Type[] VALUES = {
        HEARTBEAT, 
      };
      
      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:gossip.Gossip.Type)
    }
    
    private int bitField0_;
    // required .gossip.Gossip.Type type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip.Type type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip.Type getType() {
      return type_;
    }
    
    // optional string mac = 2;
    public static final int MAC_FIELD_NUMBER = 2;
    private java.lang.Object mac_;
    public boolean hasMac() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getMac() {
      java.lang.Object ref = mac_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          mac_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMacBytes() {
      java.lang.Object ref = mac_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        mac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .gossip.Heartbeat heartbeat = 3;
    public static final int HEARTBEAT_FIELD_NUMBER = 3;
    private bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat heartbeat_;
    public boolean hasHeartbeat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat getHeartbeat() {
      return heartbeat_;
    }
    public bz.infectd.communication.gossip.protocol.P2PProtocol.HeartbeatOrBuilder getHeartbeatOrBuilder() {
      return heartbeat_;
    }
    
    private void initFields() {
      type_ = bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip.Type.HEARTBEAT;
      mac_ = "";
      heartbeat_ = bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasHeartbeat()) {
        if (!getHeartbeat().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMacBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, heartbeat_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMacBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, heartbeat_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements bz.infectd.communication.gossip.protocol.P2PProtocol.GossipOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return bz.infectd.communication.gossip.protocol.P2PProtocol.internal_static_gossip_Gossip_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return bz.infectd.communication.gossip.protocol.P2PProtocol.internal_static_gossip_Gossip_fieldAccessorTable;
      }
      
      // Construct using bz.infectd.communication.protocol.gossip.P2PProtocol.Gossip.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHeartbeatFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip.Type.HEARTBEAT;
        bitField0_ = (bitField0_ & ~0x00000001);
        mac_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (heartbeatBuilder_ == null) {
          heartbeat_ = bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat.getDefaultInstance();
        } else {
          heartbeatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip.getDescriptor();
      }
      
      public bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip getDefaultInstanceForType() {
        return bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip.getDefaultInstance();
      }
      
      public bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip build() {
        bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip buildPartial() {
        bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip result = new bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mac_ = mac_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (heartbeatBuilder_ == null) {
          result.heartbeat_ = heartbeat_;
        } else {
          result.heartbeat_ = heartbeatBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip) {
          return mergeFrom((bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip other) {
        if (other == bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasMac()) {
          setMac(other.getMac());
        }
        if (other.hasHeartbeat()) {
          mergeHeartbeat(other.getHeartbeat());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (hasHeartbeat()) {
          if (!getHeartbeat().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip.Type value = bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              mac_ = input.readBytes();
              break;
            }
            case 26: {
              bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat.Builder subBuilder = bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat.newBuilder();
              if (hasHeartbeat()) {
                subBuilder.mergeFrom(getHeartbeat());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHeartbeat(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .gossip.Gossip.Type type = 1;
      private bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip.Type type_ = bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip.Type.HEARTBEAT;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip.Type getType() {
        return type_;
      }
      public Builder setType(bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip.Type.HEARTBEAT;
        onChanged();
        return this;
      }
      
      // optional string mac = 2;
      private java.lang.Object mac_ = "";
      public boolean hasMac() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getMac() {
        java.lang.Object ref = mac_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          mac_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMac(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mac_ = value;
        onChanged();
        return this;
      }
      public Builder clearMac() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mac_ = getDefaultInstance().getMac();
        onChanged();
        return this;
      }
      void setMac(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        mac_ = value;
        onChanged();
      }
      
      // optional .gossip.Heartbeat heartbeat = 3;
      private bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat heartbeat_ = bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat, bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat.Builder, bz.infectd.communication.gossip.protocol.P2PProtocol.HeartbeatOrBuilder> heartbeatBuilder_;
      public boolean hasHeartbeat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat getHeartbeat() {
        if (heartbeatBuilder_ == null) {
          return heartbeat_;
        } else {
          return heartbeatBuilder_.getMessage();
        }
      }
      public Builder setHeartbeat(bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat value) {
        if (heartbeatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          heartbeat_ = value;
          onChanged();
        } else {
          heartbeatBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setHeartbeat(
          bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat.Builder builderForValue) {
        if (heartbeatBuilder_ == null) {
          heartbeat_ = builderForValue.build();
          onChanged();
        } else {
          heartbeatBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeHeartbeat(bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat value) {
        if (heartbeatBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              heartbeat_ != bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat.getDefaultInstance()) {
            heartbeat_ =
              bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat.newBuilder(heartbeat_).mergeFrom(value).buildPartial();
          } else {
            heartbeat_ = value;
          }
          onChanged();
        } else {
          heartbeatBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearHeartbeat() {
        if (heartbeatBuilder_ == null) {
          heartbeat_ = bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat.getDefaultInstance();
          onChanged();
        } else {
          heartbeatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat.Builder getHeartbeatBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getHeartbeatFieldBuilder().getBuilder();
      }
      public bz.infectd.communication.gossip.protocol.P2PProtocol.HeartbeatOrBuilder getHeartbeatOrBuilder() {
        if (heartbeatBuilder_ != null) {
          return heartbeatBuilder_.getMessageOrBuilder();
        } else {
          return heartbeat_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat, bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat.Builder, bz.infectd.communication.gossip.protocol.P2PProtocol.HeartbeatOrBuilder> 
          getHeartbeatFieldBuilder() {
        if (heartbeatBuilder_ == null) {
          heartbeatBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat, bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat.Builder, bz.infectd.communication.gossip.protocol.P2PProtocol.HeartbeatOrBuilder>(
                  heartbeat_,
                  getParentForChildren(),
                  isClean());
          heartbeat_ = null;
        }
        return heartbeatBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:gossip.Gossip)
    }
    
    static {
      defaultInstance = new Gossip(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:gossip.Gossip)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gossip_Heartbeat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gossip_Heartbeat_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gossip_Gossip_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gossip_Gossip_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014gossip.proto\022\006gossip\"D\n\tHeartbeat\022\021\n\tn" +
      "ode_host\030\001 \002(\t\022\021\n\tnode_port\030\002 \002(\005\022\021\n\thea" +
      "rtbeat\030\003 \002(\005\"u\n\006Gossip\022!\n\004type\030\001 \002(\0162\023.g" +
      "ossip.Gossip.Type\022\013\n\003mac\030\002 \001(\t\022$\n\theartb" +
      "eat\030\003 \001(\0132\021.gossip.Heartbeat\"\025\n\004Type\022\r\n\t" +
      "HEARTBEAT\020\001B9\n(bz.infectd.communication." +
      "protocol.gossipB\013P2PProtocolH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_gossip_Heartbeat_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_gossip_Heartbeat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gossip_Heartbeat_descriptor,
              new java.lang.String[] { "NodeHost", "NodePort", "Heartbeat", },
              bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat.class,
              bz.infectd.communication.gossip.protocol.P2PProtocol.Heartbeat.Builder.class);
          internal_static_gossip_Gossip_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_gossip_Gossip_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gossip_Gossip_descriptor,
              new java.lang.String[] { "Type", "Mac", "Heartbeat", },
              bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip.class,
              bz.infectd.communication.gossip.protocol.P2PProtocol.Gossip.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
